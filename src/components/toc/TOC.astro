---
import '@src/styles/toc.css'
import Writing from  './Writing.astro';
import Heading from  './Heading.astro';
import Images from  './Images.astro';

const { toc } = Astro.props

const tocParts = []

let currentPart: any = {}
for (let item of toc) {
  const type = item.type
  if (type == 'heading') {
    if (currentPart.items && currentPart.items.length > 0) {
      tocParts.push(currentPart)
      currentPart = {}
    }
    tocParts.push({
      type: type,
      data: item
    })
  } else if (type == 'image') {
    if (currentPart.type === 'image') {
      currentPart.items.push(item)
    } else {
      if (currentPart.type) tocParts.push(currentPart)
      currentPart = {
        type: 'image',
        items: [item]
      }
    }
  } else {
    if (currentPart.type === 'writing') {
      currentPart.items.push(item)
    } else {
      if (currentPart.type) tocParts.push(currentPart)
      currentPart = {
        type: 'writing',
        items: [item]
      }
    }
  }
}
if (currentPart.items) tocParts.push(currentPart)
---

<div id="toc">
  <a id="top-a" href="#top">
    <div id="toc-top">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="100%" height="100%" preserveAspectRatio="none">
        <path id="top-shape" d="M50,100c27.6,0,48-23.81,50-100H0C2,76.19,22.4,100,50,100z"/>
      </svg>
      <div id="top-text" class="konsole">Top</div>
    </div>
  </a>
  {tocParts.map(part => {
    let type = part.type;
    if (type === 'writing') {
      return <Writing items={part.items} />
    } else if (type === 'heading') {
      return <Heading data={part.data} />
    } else if (type === 'image') {
      return <Images items={part.items} />
    }
  })}
</div>

<script>
  import '@src/scripts/toc.js'
</script>